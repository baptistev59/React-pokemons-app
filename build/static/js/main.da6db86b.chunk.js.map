{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-services.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentification-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","arguments","length","undefined","Date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","React","createElement","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","_classCallCheck","_createClass","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","term","_this6","includes","Object","keys","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","_defineProperty","_objectSpread","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","addPokemon","updatePokemon","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthentificationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthenticationService","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","assign","render","props","Redirect","pathname","App","Router","Switch","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da6db86b.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\r\n    return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n    let color: string;\r\n   \r\n    switch (type) {\r\n      case 'Feu': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'Plante': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'Vol': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'Poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'Fée': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'Psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'Electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'Combat': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n   \r\n    return `chip ${color}`;\r\n  }\r\n\r\n  export default formatType;","import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport './pokemon-card.css';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon\r\n  borderColor?: string\r\n};\r\n  \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\r\n\r\n    const[color, setColor] = useState<string>();\r\n    const history = useHistory();\r\n\r\n    const showBorder = () => {\r\n        setColor(borderColor); // met la bordure à la couleurs de la props borderColor\r\n    }\r\n\r\n    const hideBorder = () => {\r\n        setColor('#f5f5f5'); // met la bordure en gris\r\n    }\r\n\r\n    const goToPokemon = (id: number) => {\r\n        history.push(`/pokemons/${id}`);\r\n    }\r\n    \r\n  return (\r\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n      <div className=\"card horizontal\" style={{ borderColor: color }} >\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type => (\r\n                <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonCard;","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null|undefined> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-services';\r\n \r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n \r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n \r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\"> \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonService from '../services/pokemon-services';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <PokemonSearch />\r\n          {pokemons.map(pokemon => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n          ))}\r\n        </div>\r\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3'\r\n        style={{position: 'fixed', bottom:'25px', right:'25px'}}\r\n        to=\"/pokemons/add\">\r\n          <i className='material-icons'>add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-services';\r\nimport Loader from '../components/loader';\r\n  \r\ntype Params = { id: string };\r\n  \r\nconst PokemonDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null|undefined>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className='btn btn-floating halfway-fab waves-effect waves-light'>\r\n                    <i className='material-icons'>edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-services';\r\n\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    isEditForm: boolean\r\n};\r\n\r\ntype Field = { //Création du type Field (le champ de formulaire)\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n}\r\n\r\ntype Form = { //Création du type Form (le formulaire)\r\n    picture: Field,\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n}\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        picture: { value: pokemon.picture },\r\n        name: { value: pokemon.name, isValid: true },\r\n        hp: { value: pokemon.hp, isValid: true },\r\n        cp: { value: pokemon.cp, isValid: true },\r\n        types: { value: pokemon.types, isValid: true },\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const types: string[] = [\r\n        'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n        'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n    ];\r\n\r\n    const hasType = (type: string): boolean => {\r\n        return form.types.value.includes(type);\r\n    }\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        setForm({ ...form, ...newField }); // les ... permettent de fusionner les valeurs de newField avec celles de form\r\n    }\r\n\r\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const checked = e.target.checked;\r\n        let newField: Field;\r\n\r\n        if (checked) {\r\n            // Si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon.\r\n            const newTypes: string[] = form.types.value.concat([type]);\r\n            newField = { value: newTypes };\r\n        } else {\r\n            // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n            const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n            newField = { value: newTypes };\r\n        }\r\n\r\n        setForm({ ...form, ...{ types: newField } });\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const isFormValid = validateForm();\r\n\r\n        if (isFormValid) {\r\n            pokemon.picture = form.picture.value;\r\n            pokemon.name = form.name.value;\r\n            pokemon.hp = form.hp.value;\r\n            pokemon.cp = form.cp.value;\r\n            pokemon.types = form.types.value;\r\n\r\n            isEditForm ? updatePokemon() : addPokemon();\r\n        }\r\n    }\r\n\r\n    const isAddForm = () => {\r\n        return !isEditForm;\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let newForm: Form = form;\r\n\r\n        // Validator URL\r\n        if (isAddForm()) {\r\n            const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n            const end = \".png\";\r\n\r\n            if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n                const errorMsg: string = \"L'url n'est pas valide.\";\r\n                const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n                newForm = { ...form, ...{ picture: newField } };\r\n\r\n            } else {\r\n                const newField: Field = { value: form.picture.value, error: '', isValid: true };\r\n                newForm = { ...form, ...{ picture: newField } };\r\n            }\r\n        }\r\n\r\n        // Validator name\r\n        if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n            const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n            const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n            newForm = { ...newForm, ...{ name: newField } };\r\n        } else {\r\n            const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n            newForm = { ...newForm, ...{ name: newField } };\r\n        }\r\n\r\n        // Validator hp\r\n        if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n            const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n            const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false };\r\n            newForm = { ...newForm, ...{ hp: newField } };\r\n        } else {\r\n            const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n            newForm = { ...newForm, ...{ hp: newField } };\r\n        }\r\n\r\n        // Validator cp\r\n        if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n            const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n            const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false };\r\n            newForm = { ...newForm, ...{ cp: newField } };\r\n        } else {\r\n            const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n            newForm = { ...newForm, ...{ cp: newField } };\r\n        }\r\n\r\n        setForm(newForm);\r\n        return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n    }\r\n\r\n    const isTypesValid = (type: string): boolean => {\r\n        // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\r\n        // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\r\n        if (form.types.value.length === 1 && hasType(type)) {\r\n            return false;\r\n        }\r\n\r\n        // Cas n°2: Le pokémon a au moins 3 types.\r\n        // Dans ce cas il faut empêcher l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\r\n        if (form.types.value.length >= 3 && !hasType(type)) {\r\n            return false;\r\n        }\r\n\r\n        // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \r\n        // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\r\n        return true;\r\n    }\r\n\r\n    const addPokemon = () => {\r\n        PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\r\n    }\r\n\r\n    const updatePokemon = () => {\r\n        PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\r\n    }\r\n\r\n    const deletePokemon = () => {\r\n        PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={e => handleSubmit(e)}>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m8 offset-m2\">\r\n                    <div className=\"card hoverable\">\r\n                        {isEditForm && (\r\n                            <div className=\"card-image\">\r\n                                <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\r\n                                <span className='btn-floating halfway-fab waves-effect waves-light'>\r\n                                    <i onClick={deletePokemon} className='material-icons'>delete</i>\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"card-stacked\">\r\n                            <div className=\"card-content\">\r\n                                {/* Pokemon picture */}\r\n                                {isAddForm() && (\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"picture\">Image</label>\r\n                                        <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                                        {form.picture.error &&\r\n                                            <div className='card-panel red accent-1'>\r\n                                                {form.picture.error}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                                {/* Pokemon name */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Nom</label>\r\n                                    <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                                    {form.name.error &&\r\n                                        <div className='card-panel red accent-1'>\r\n                                            {form.name.error}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                {/* Pokemon hp */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"hp\">Point de vie</label>\r\n                                    <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                                    {form.hp.error &&\r\n                                        <div className='card-panel red accent-1'>\r\n                                            {form.hp.error}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                {/* Pokemon cp */}\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"cp\">Dégâts</label>\r\n                                    <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                                    {form.cp.error &&\r\n                                        <div className='card-panel red accent-1'>\r\n                                            {form.cp.error}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                {/* Pokemon types */}\r\n                                <div className=\"form-group\">\r\n                                    <label>Types</label>\r\n                                    {types.map(type => (\r\n                                        <div key={type} style={{ marginBottom: '10px' }}>\r\n                                            <label>\r\n                                                <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\r\n                                                <span>\r\n                                                    <p className={formatType(type)}>{type}</p>\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-action center\">\r\n                                {/* Submit button */}\r\n                                <button type=\"submit\" className=\"btn\">Valider</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-services';\r\nimport Loader from '../components/loader';\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n\r\n  const [pokemon, setPokemon] = useState<Pokemon|null|undefined>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\r\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React, { FunctionComponent, useState } from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n    return(\r\n        <div className='row'>\r\n            <h2 className='header center'>Ajouter un pokémon</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonAdd;","export default class AuthentificationService {\r\n    static isAuthenticated: boolean = false;\r\n\r\n    static login(username: string, password: string): Promise<boolean> {\r\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n            }, 1000);\r\n        });\r\n    }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentification-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentification-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React, { FunctionComponent } from 'react';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport PokemonDetail from './pages/pokemon-detail';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\nconst App: FunctionComponent = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* barre de nav */}\r\n        <nav>\r\n          <div className='nav-wrapper teal'>\r\n            <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      {/* gestion des routes */}\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n        <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n        <PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\r\n\r\n        <PrivateRoute path=\"/pokemons/:id\" component={PokemonDetail} />\r\n\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}